# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    tags: ["v*"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: release

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
          
      - name: Set permissions on gradlew
        working-directory: ./src
        run: chmod +x gradlew

      - run: |
          echo "SIGNING_RELEASE_KEYSTORE_FILE=${{ github.workspace }}/${{ vars.SIGNING_RELEASE_KEYSTORE_FILEPATH }}" >> "$GITHUB_ENV"  

      - name: Decode Keystore
        id: decode_keystore
        run: |
          echo "$SIGNING_RELEASE_KEYSTORE_FILE"
          mkdir -p $(dirname "$SIGNING_RELEASE_KEYSTORE_FILE")
          echo "${{ secrets.SIGNING_RELEASE_KEYSTORE }}" | base64 --decode > "$SIGNING_RELEASE_KEYSTORE_FILE"
          
      - name: Build
        working-directory: ./src
        env:
          SIGNING_RELEASE_KEYSTORE_FILEPATH: "$SIGNING_RELEASE_KEYSTORE_FILE"
        run: |
          echo "${{ env.SIGNING_RELEASE_KEYSTORE_FILEPATH }}"
          ./gradlew assembleRelease --no-daemon --stacktrace

      # - name: Upload APK
      #   uses: actions/upload-artifact@v1
      #   with:
      #     name: apk
      #     path: src/app/build/outputs/apk/release/
